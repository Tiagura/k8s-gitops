apiVersion: apps/v1
kind: Deployment
metadata:
  name: gotigram
  namespace: goti-stack
  labels:
    app: gotigram
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gotigram
  template:
    metadata:
      labels:
        app: gotigram
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      initContainers:
        - name: create-gotigram-token
          image: badouralix/curl-jq
          command:
            - /bin/sh
            - -c
            - |

              echo "Waiting for Gotify service..."
              until curl -sS http://gotify:80 >/dev/null 2>&1; do
                echo "Gotify not ready, sleeping 2s..."
                sleep 2
              done

              AUTH="-u ${GOTIFY_DEFAULTUSER_NAME}:${GOTIFY_DEFAULTUSER_PASS}"

              echo "GET /client..."
              RESP=$(curl -sS $AUTH http://gotify:80/client || echo "[]")
              echo "GET response (first 1024 chars):"
              echo "$RESP" | head -c 1024
              echo ""

              TOKEN=$(echo "$RESP" | jq -r '.[] | select(.name=="Gotigram Client") | .token' | head -n1 || true)
              if [ -n "$TOKEN" ]; then
                echo "Found existing Gotigram Client token"
                echo "$TOKEN" > /token/gotigram.token
                exit 0
              fi

              echo "Creating Gotigram Client..."
              POSTRESP=$(curl -sS $AUTH -X POST -H "accept: application/json" -H "Content-Type: application/json" \
                -d '{"name":"Gotigram Client"}' http://gotify:80/client)
              echo "POST response (first 1024 chars):"
              echo "$POSTRESP" | head -c 1024
              echo ""

              TOKEN=$(echo "$POSTRESP" | jq -r '.token // empty')
              if [ -n "$TOKEN" ]; then
                echo "Successfully created token"
                echo "$TOKEN" > /token/gotigram.token
                exit 0
              fi

              echo "Failed to create token"
              exit 1
          env:
            - name: GOTIFY_DEFAULTUSER_NAME
              valueFrom:
                secretKeyRef:
                  name: goti-stack-config-secrets
                  key: username
            - name: GOTIFY_DEFAULTUSER_PASS
              valueFrom:
                secretKeyRef:
                  name: goti-stack-config-secrets
                  key: password
          volumeMounts:
            - name: token-volume
              mountPath: /token

      containers:
        - name: gotigram
          image: tiagura/gotigram:1.0.0
          command:
            - /bin/sh
            - -c
            - |
              # Read token generated by init container
              if [ ! -f /token/gotigram.token ]; then
                echo "ERROR: Token file missing"
                exit 1
              fi

              export GOTIFY_CLIENT_TOKEN=$(cat /token/gotigram.token)
              echo "Gotify token loaded!"

              # Run the image's default CMD
              python3 /app/main.py
          env:
            - name: GOTIFY_WS_URL
              value: "ws://gotify:80"
            - name: GOTIFY_REST_URL
              value: "http://gotify:80"
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: goti-stack-config-secrets
                  key: telegram-bot-token
            - name: TELEGRAM_CHAT_ID
              valueFrom:
                secretKeyRef:
                  name: goti-stack-config-secrets
                  key: telegram-chat-id
          volumeMounts:
            - name: token-volume
              mountPath: /token
            - name: gotigram-logs
              mountPath: /app/logs
          resources:
            requests:
              cpu: "10m"
              memory: "32Mi"
            limits:
              cpu: "200m"
              memory: "64Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]

      volumes:
        - name: token-volume
          emptyDir: {}
        - name: gotigram-logs
          emptyDir: {}