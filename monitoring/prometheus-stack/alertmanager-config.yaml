apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: alertmanager-config
  namespace: prometheus-stack
  labels:
    release: kube-prometheus-stack
spec:
  route:
    receiver: telegram-main
    groupBy: ['cluster', 'alertname', 'severity']
    groupWait: 10s
    groupInterval: 5m
    repeatInterval: 12h
    routes:
      - matchers:
          - name: severity
            value: critical
            matchType: =
        receiver: telegram-main
        groupWait: 5s
        groupInterval: 2m
        repeatInterval: 5m

      - matchers:
          - name: severity
            value: warning
            matchType: =
        receiver: telegram-main
        groupInterval: 10m
        repeatInterval: 2h

      - matchers:
          - name: alertname
            value: "NodeDown|KubeletDown|PrometheusDown"
            matchType: =~
        receiver: telegram-main
        groupWait: 5s
        repeatInterval: 10m

  inhibitRules:
    - sourceMatch:
        - name: severity
          value: critical
          matchType: =
      targetMatch:
        - name: severity
          value: warning
          matchType: =
      equal:
        - cluster
        - service

    - sourceMatch:
        - name: alertname
          value: NodeDown
          matchType: =
      targetMatch:
        - name: alertname
          value: "NodeDiskRunningFull|NodeFilesystemSpaceFillingUp|NodeMemoryHighUtilization"
          matchType: =~
      equal:
        - instance

  receivers:
    - name: telegram-main
      telegramConfigs:
        - botToken:
            name: alertmanager-secrets
            key: telegram-bot-token
          chatID: 6429399734
          parseMode: HTML
          sendResolved: true
          message: |-
            <b>[{{ .CommonLabels.severity | toUpper }}]</b> {{ .CommonLabels.alertname }}
            (Cluster: {{ .CommonLabels.cluster }}, Namespace: {{ .CommonLabels.namespace }})
            {{ range .Alerts }}
            â€¢ <i>{{ .Annotations.summary }}</i>
            {{ end }}