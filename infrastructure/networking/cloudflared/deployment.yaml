apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: cloudflared
  labels:
    app: cloudflared
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532        # nobody
        runAsGroup: 65532       # nobody
        seccompProfile:
          type: RuntimeDefault
        sysctls:
        # Allows ICMP traffic (ping, traceroute) to resources behind cloudflared.
          - name: net.ipv4.ping_group_range
            value: "65532 65532"
      # Spread pods across nodes to avoid single points of failure.
      # This is a best-effort attempt to ensure that cloudflared pods are not scheduled
      # on the same node, which can help with availability in case of node failures.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cloudflared
                topologyKey: kubernetes.io/hostname
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:latest@sha256:803b17adb5326a38ce397b9c9f374289ad290ee5526d204b5879a1423b6f5c3e
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config.yaml
            - run
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cloudflared-tunnel-token-secret
                  key: api-token
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          readinessProbe:
            httpGet:
              path: /metrics
              port: 2000
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /metrics
              port: 2000
            initialDelaySeconds: 60
            failureThreshold: 5
            periodSeconds: 30
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: cloudflared-config